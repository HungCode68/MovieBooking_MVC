@model List<Seat>

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container mt-4">
    <h2 class="text-white">Seat Management</h2>

    <div class="btn-group mb-3">
        <a href="@Url.Action("Movies", "Manage")" class="btn btn-outline-light">Movie Manage</a>
        <a href="@Url.Action("Showtimes", "Manage")" class="btn btn-outline-light">Showtime Manage</a>
        <a href="@Url.Action("Seats", "Manage")" class="btn btn-primary">Seat Manage</a>
        <a href="@Url.Action("Rooms", "Manage")" class="btn btn-outline-light">Room Manage</a>
        <a href="@Url.Action("Tickets", "Manage")" class="btn btn-outline-light">Ticket Manage</a>
        <a href="@Url.Action("Users", "Manage")" class="btn btn-outline-light">User Manage</a>
        <a href="@Url.Action("UserDetails", "Manage")" class="btn btn-outline-light">UserDetail Manage</a>
        <a href="@Url.Action("Statistical", "Manage")" class="btn btn-outline-light">Statistical Manage</a>

    </div>

    <div class="mb-3">
        <label class="text-white">Select Showtime:</label>
        <select id="showtimeSelect" class="form-control">
            <option value="">-- Select Showtime --</option>
            @if (ViewBag.Showtimes != null)
            {
                foreach (var showtime in ViewBag.Showtimes)
                {
                    <option value="@showtime.Id">@showtime.Id - @showtime.MovieTitle - @showtime.CinemaRoom - @showtime.Showtimes.ToString("HH:mm") - @showtime.ShowDate</option>
                }
            }
        </select>
    </div>

    <div class="mb-3">
        <button id="searchBtn" class="btn btn-success">🔍 Search</button>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addSeatModal">➕ Add Seat</button>
    </div>

    <div class="table-responsive mt-4">
        <table class="table table-dark table-bordered text-white">
            <thead class="thead-light">
                <tr>
                    <th>ID</th>
                    <th>Seat Number</th>
                    <th>Type</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="seatTableBody">
                <tr>
                    <td colspan="5" class="text-center">Please select a showtime and click "Search" to see the seat list.</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!-- Modal Thêm Ghế -->
<div class="modal fade" id="addSeatModal" tabindex="-1" aria-labelledby="addSeatModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSeatModalLabel">Add new seat</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-dark">
                <form id="addSeatForm">
                    <div class="mb-3">
                        <label class="form-label">Seat Number</label>
                        <input type="text" id="seatNumber" name="SeatNumber" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Select Showtime</label>
                        <select id="showtimeIdInput" name="ShowtimeId" class="form-control" required>
                            <option value="">-- Select Showtime --</option>
                            @if (ViewBag.Showtimes != null)
                            {
                                foreach (var showtime in ViewBag.Showtimes)
                                {
                                    <option value="@showtime.Id">@showtime.Id - @showtime.MovieTitle (@showtime.CinemaRoom - @showtime.Showtimes.ToString("HH:mm") - @showtime.ShowDate)</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Seat Type</label>
                        <select id="seatType" name="SeatType" class="form-control">
                            <option value="Standard">Standard</option>
                            <option value="VIP">VIP</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Seat Status</label>
                        <select id="isBooked" name="IsBooked" class="form-control">
                            <option value="false">Available</option>
                            <option value="true">Booked</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Booking Id</label>
                        <input type="number" id="bookingId" name="BookingId" class="form-control" placeholder="Enter ID or leave blank">
                    </div>
                    <button type="submit" class="btn btn-primary">Add Seat</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal Chỉnh Sửa Ghế -->
<div class="modal fade" id="editSeatModal" tabindex="-1" aria-labelledby="editSeatModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editSeatModalLabel">Edit Seat</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editSeatForm">
                    <input type="hidden" id="editSeatId">

                    <div class="mb-3">
                        <label for="editSeatNumber" class="form-label">Seat Number</label>
                        <input type="text" class="form-control" id="editSeatNumber" required>
                    </div>

                    <div class="mb-3">
                        <label for="editSeatType" class="form-label">Seat Type</label>
                        <select class="form-control" id="editSeatType">
                            <option value="Standard">Standard</option>
                            <option value="VIP">VIP</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="editIsBooked" class="form-label">Booking Status</label>
                        <select class="form-control" id="editIsBooked">
                            <option value="true">Booked</option>
                            <option value="false">Available</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="editBookingId" class="form-label">Booking ID</label>
                        <input type="number" class="form-control" id="editBookingId" placeholder="Enter booking ID (if applicable)">
                    </div>

                    <button type="submit" class="btn btn-primary">Update</button>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    document.getElementById("searchBtn").addEventListener("click", function () {
        var showtimeId = document.getElementById("showtimeSelect").value;
        var tableBody = document.getElementById("seatTableBody");

        if (!showtimeId) {
            alert("Please select a showtime first!");
            return;
        }

        fetch(`https://localhost:7279/api/seats/showtime/${showtimeId}`)
        .then(response => response.json())
        .then(data => {
            let rows = data.map(seat => `
                <tr>
                    <td>${seat.id}</td>
                    <td>${seat.seatNumber}</td>
                    <td>${seat.seatType}</td>
                    <td class="${seat.isBooked ? 'text-danger' : 'text-success'}">
                        ${seat.isBooked ? 'Booked' : 'Available'}
                    </td>
                    <td>
                    <button class="btn btn-warning btn-sm edit-seat" data-id="${seat.id}">Edit</button>
                        <button class="btn btn-danger btn-sm text-dark delete-seat" data-id="${seat.id}">Delete</button>
                    </td>
                </tr>
            `).join("");
            tableBody.innerHTML = rows;
            // Gán sự kiện click cho nút "Sửa"
        document.querySelectorAll(".edit-seat").forEach(button => {
            button.addEventListener("click", function () {
                var seatId = this.getAttribute("data-id");
                editSeat(seatId);
            });
        });
            document.querySelectorAll(".delete-seat").forEach(button => {
        button.addEventListener("click", function () {
            var seatId = this.getAttribute("data-id");
            deleteSeat(seatId);
        });
    });
        })
        .catch(error => console.error("Error loading seat data:", error));
    });

                document.getElementById("addSeatForm").addEventListener("submit", function (e) {
        e.preventDefault();
        var seatNumber = document.getElementById("seatNumber").value;
        var showtimeId = document.getElementById("showtimeIdInput").value;
        var seatType = document.getElementById("seatType").value;
        var isBooked = document.getElementById("isBooked").value === "true"; // Chuyển giá trị thành Boolean
        var bookingId = document.getElementById("bookingId").value.trim(); // Lấy giá trị bookingId

        if (!showtimeId) {
            alert("Please select showtime!");
            return;
        }

        var requestData = {
            SeatNumber: seatNumber.trim(),
            ShowtimeId: parseInt(showtimeId, 10),
            SeatType: seatType,
            IsBooked: isBooked,
            BookingId: bookingId ? parseInt(bookingId, 10) : null // Nếu rỗng thì set là null
        };

        console.log("Data sent:", requestData);

        fetch("https://localhost:7279/api/seats", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(requestData)
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(err => { throw new Error(err); });
            }
            return response.json();
        })
        .then(() => {
            alert("Added seat successfully!");
            document.getElementById("searchBtn").click();
            document.querySelector("#addSeatModal .btn-close").click();
        })
        .catch(error => {
            console.error("Lỗi:", error);
            alert("Add seat failed! Error: " + error.message);
        });
    });

        function deleteSeat(seatId) {
        if (!confirm("Are you sure you want to delete this seat??")) return;

        fetch(`https://localhost:7279/api/seats/${seatId}`, {
            method: "DELETE"
        })
        .then(response => {
            if (!response.ok) {
                throw new Error("Error deleting chair.");
            }
            alert("The chair has been successfully deleted.!");
            location.reload();
        })
        .catch(error => {
            alert("Error deleting chair: " + error.message);
        });
    }

        function editSeat(seatId) {
        fetch(`https://localhost:7279/api/seats/${seatId}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById("editSeatId").value = data.id;
                document.getElementById("editSeatNumber").value = data.seatNumber;
                document.getElementById("editSeatType").value = data.seatType;
                document.getElementById("editIsBooked").value = data.isBooked.toString();
                document.getElementById("editBookingId").value = data.bookingId ? data.bookingId : ""; // Nếu không có BookingId thì để trống

                $("#editSeatModal").modal("show"); // Hiển thị modal
            })
            .catch(error => {
                alert("Unable to load seat information.");
                console.error(error);
            });
    }
        document.getElementById("editSeatForm").addEventListener("submit", function (event) {
        event.preventDefault();

        var seatId = document.getElementById("editSeatId").value;
        var updatedSeat = {
            id: seatId,
            seatNumber: document.getElementById("editSeatNumber").value,
            seatType: document.getElementById("editSeatType").value,
            isBooked: document.getElementById("editIsBooked").value === "true",
    bookingId: document.getElementById("editBookingId").value.trim() ? parseInt(document.getElementById("editBookingId").value) : null
        };

        fetch(`https://localhost:7279/api/seats/${seatId}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(updatedSeat)
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(err => { throw new Error(err); });
            }
            return response.json();
        })
        .then(() => {
            alert("Seat update successful!");
            $("#editSeatModal").modal("hide");
            document.getElementById("searchBtn").click(); // Cập nhật danh sách ghế
        })
        .catch(error => {
            console.error("Error while updating seat:", error);
            alert("Update failed: " + error.message);
        });
    });


</script>
<style>
    .modal-title{
        color: black;
    }

    .modal-content {
        color: black;
    }
</style>
